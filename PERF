# 预备知识

[perf性能分析](https://melonshell.github.io/2019/10/09/tool1_perf/)

# perf基本原理

Perf基本原理是对被监测对象进行采样，最简单的情形是根据tick中断进行采样，即在tick中断内触发采样点，在采样点里判断程序当前的上下文。假如一个程序90%的时间都花费在函数foo()上，那么90%的采样点都应该落在函数foo()的上下文中，采样时间越长，上述推论越可靠。因此通过tick触发采样，我们就可以了解程序中哪些地方最耗时间。稍微扩展一下：

* 以时间点(如tick)作为事件触发采样可以获知程序运行的时间分布。
* 以cache miss事件触发采样可以知道cache miss的分布，即cache失效经常发生在哪些程序代码中。

# 火焰图

# cache
